services:
  postgres:
    image: postgres:13
    container_name: postgres 
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow 
      POSTGRES_DB: airflow 
    volumes:
      - postgres_db:/var/lib/postgresql/data
    networks:
      - etl_network 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  airflow-webserver: # provide Airflow web UI interface
    build: . # use custom Dockerfile instead of image
    container_name: airflow-webserver
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_UID=50000
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags 
      - ./scripts:/opt/airflow/scripts
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - airflow_config:/opt/airflow/config
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - etl_network 
    command: webserver

  airflow-scheduler: # core Airflow component that schedules and triggers DAG runs
    build: . 
    container_name: airflow-scheduler
    restart: always
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_UID=50000
    volumes:
      - ./dags:/opt/airflow/dags 
      - ./scripts:/opt/airflow/scripts 
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - airflow_config:/opt/airflow/config
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    networks:
      - etl_network 
    command: scheduler

  airflow-init: # run once and then stop 
    build: . 
    container_name: airflow-init 
    restart: "no"
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW_UID=50000
    volumes:
      - ./dags:/opt/airflow/dags       
      - ./scripts:/opt/airflow/scripts
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
      - airflow_config:/opt/airflow/config
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname Admin --role Admin --email admin@example.com --password admin
      "
    networks:
      - etl_network 
    
  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    environment:
      # Default single-node settings
      CASSANDRA_CLUSTER_NAME: "BTL2_cluster_2"
      CASSANDRA_DC: "DC_2"
      CASSANDRA_RACK: "rack1"
    volumes:
      - cassandra_db_test:/var/lib/cassandra
    networks:
      - etl_network 

volumes:
  cassandra_db_test: 
  postgres_db: 
  airflow_logs:
  airflow_plugins:
  airflow_config:

networks:
  etl_network:
    driver: bridge 